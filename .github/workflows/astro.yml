# Sample workflow for building and deploying an Astro site to GitHub Pages
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
#
name: Deploy Astro site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "jahsehllif3" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "./a-repo" # default value when not using subfolders
  # BUILD_PATH: subfolder
  COPY_PATH: "./b-repo"
  USERNAME: "jahsehllif3"
  FROM_REPO: "astro-air-blog"
  TO_REPO: "jahsehllif3.github.io"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/package-lock.json
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}
      - name: Build with Astro
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.BUILD_PATH }}/dist
      - name: Checkout B repository
        uses: actions/checkout@v2
        with:
          repository: jahsehllif3/jahsehllif3.github.io
          ref: main
          path: './b-repo' # 将 B 仓库的代码检出到当前工作目录下的 b-repo 目录
      # Download artifact and copy to B repo
      - name: Copy artifact to B repo
        run: |
          # 从 GitHub Artifacts 下载构建结果，将其复制到 B 仓库对应目录下
          cd ./b-repo
          mkdir -p ./dist
          curl -L -O "$(curl -s https://api.github.com/repos/${{ env.USERNAME }}/${{ env.FROM_REPO }}/actions/artifacts?per_page=1 | jq -r '.artifacts[0].archive_download_url')"
          unzip -q artifact.zip -d ./dist
          rm -f artifact.zip
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: main
          directory: ./b-repo # 推送当前工作目录下的 b-repo 目录的变更到指定分支
          force: true